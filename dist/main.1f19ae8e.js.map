{"version":3,"sources":["connect4.js","main.js"],"names":["Connect4","selector","ROWS","COLS","player","createGrid","setupEventListeners","$board","$","console","log","row","$row","addClass","col","$col","attr","append","that","findLastEmptyCell","cells","i","length","$cell","hasClass","on","data","$lastEmptyCell","removeClass","trigger","document","ready","connect4"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["class Connect4 {\n    constructor(selector) {\n        this.ROWS = 6;\n        this.COLS = 7;\n        this.player = 'red';\n        this.selector = selector;\n        this.createGrid()\n        this.setupEventListeners();\n    }\n\n    createGrid() {\n    const $board = $(this.selector)\n    console.log($board);\n    for (let row = 0; row < this.ROWS; row++) {\n        const $row = $('<div>')\n        .addClass('row');\n        for (let col = 0; col < this.COLS; col++) {\n        const $col = $('<div>')\n        .addClass('col empty')\n        .attr('data-col', col)\n        .attr('data-row', row)\n        $row.append($col);\n        }\n        $board.append($row)\n    }\n  }\n\n  setupEventListeners() {\n    const $board = $(this.selector);\n    const that = this;\n\n    function findLastEmptyCell(col) {\n        const cells = $(`.col[data-col='${col}']`);\n        for (let i = cells.length -1; i>=0; i--) {\n            const $cell = $(cells[i]);\n            if ($cell.hasClass('empty')) {\n                return $cell;\n            }\n        }\n        console.log(cells);\n    }\n\n    $board.on('mouseenter', '.col.empty', function() {\n        const col = $(this).data('col');\n        const $lastEmptyCell = findLastEmptyCell(col);\n      $lastEmptyCell.addClass(`next-${that.player}`)\n\n    })\n\n    $board.on('mouseleave', '.col', function() {\n        $('.col').removeClass(`next-${that.player}`);\n    })\n\n    $board.on('click', '.col.empty', function() {\n        const col = $(this).data('col');\n        const $lastEmptyCell = findLastEmptyCell(col);\n        $lastEmptyCell.removeClass(`empty next-${that.player}`);\n        $lastEmptyCell.addClass(that.player);\n        that.player = (that.player === 'red') ? 'black' : 'red';\n        $(this).trigger('mouseenter')\n    });\n  }  \n}\n\nexport default Connect4;","import Connect4 from \"./connect4\";\n\n$(document).ready(function() {\n// TODO: Draw a grid\nconst connect4 = new Connect4('#connect4')\n});\n"]}